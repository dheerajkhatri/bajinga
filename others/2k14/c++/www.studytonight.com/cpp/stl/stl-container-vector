<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Introduction to Vector Container in STL | C++ Tutorial | Studytonight</title>

<meta name="description" content="Learn about Vector in Standard Template Library(STL) of C++ and its member functions in this tutorial.">

<!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
<!--[if lt IE 9]>
<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->

<!-- Le styles -->
<link href="../../css/bootstrap.css" rel="stylesheet">
<link rel="icon" type="image/png" href="../../css/resource/favicon.png">


</head>
<body>

<style>

.dropdown:hover ul{
    display:block;
}
.dropdown ul { 
    display: none;  
    position:absolute;
    background: rgba(0, 0, 0, 0.80); 
    width: 150px;   
    list-style-type:none;
    padding:10px;
} 
.dropdown ul li{
    padding:4px;
}
.dropdown ul li a{ 
    line-height:30px;
    cursor:pointer;
    text-decoration:none;
    color:white;
} 
.dropdown ul li a:hover{
   color:orange;
} 
.dropdown ul.second
{
    left: 300px;
}

</style>

<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_GB/all.js#xfbml=1&appId=183470395085546";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>
<div class="navbar navbar-inverse navbar-fixed-top">
<div class="navbar-inner">
<div class="nav-container">
<a class="brand" href="../../index.html" title="Take me Home :)"><img id="brand-icon" src="../../css/resource/st-icon.png" alt="studytonight logo"/></a>

<!-- <font color="orange">Study</font>tonight<sup><span id="beta">&#946;eta</span></sup> --> 

<ul class="nav navbar-nav nav-left-responsive">
<li><a href="http://studytonight.com/online-courses/">VIDEO PLAYLISTS</a></li>
<li class="dropdown"><a href="http://studytonight.com/library/">TUTORIALS</a>

	<ul class="first">
            <li><a href="../../android-app-using-mit-appinventor">ANDROID</a></li>
            <li><a href="../../maven">APACHE MAVEN</a></li>
            <li><a href="../../c">C LANGUAGE</a></li>
            <li><a href="../../cpp.1">C++</a></li>
            <li><a href="../../computer-networks">COMPUTER NETWORKS</a></li>
            <li><a href="../../java">CORE JAVA</a></li>
      </ul>
      <ul class="second">
      	    <li><a href="../../dbms">DBMS</a></li>
            <li><a href="../../data-structures">DATA STRUCTURE</a></li>
            <li><a href="../../jenkins">JENKINS</a></li>
            <li><a href="../../jsp">JSP</a></li>
            <li><a href="../../operating-system">OPERATING SYSTEM</a></li>
            <li><a href="../../servlet">SERVLET</a></li>
       </ul>

</li>
<li><a href="http://studytonight.com/studyroom/">Q &amp; A FORUM</a></li>
<li><a href="http://studytonight.com/tests/">TESTS</a></li>
<li><a href="http://studytonight.com/code/">HTML COURSE<sup id='beta'>NEW</sup></a></li>
</ul>


<ul class="nav nav-fb-responsive">
<li class="nav-header">
<div class="fb-like" data-href="http://facebook.com/studytonight" data-send="false" data-layout="button_count" data-width="100" data-show-faces="false"></div>
</li>
</ul>


<ul class="nav pull-right-menuoption nav-right-responsive">
<li>
<form class="navbar-search" action="http://www.studytonight.com/search.php" method="GET"> 
<table>
<tr>
<td><input type="text" name="q" maxlength="255" value="" class="search-query span2" placeholder="Search" title="Search Studytonight for Lessons and Topics"/></td>
</tr>
</table>
</form>
</li>
<li><a href="../../login">LogIn</a></li>
<li><a style="font-weight:bold;color:#f84906;" href="../../register">SignUp</a></li>
<li><a href="../../suggest">Suggest</a></li>
</ul>
</div>
</div>
</div>

<div style="float:right;margin-right:100px;">
<div class="bookmark-responsive">
<div class="bookmark-ribbon traditional font-calibri">
<a href="../../collaborate" target="_blank"><div id="bookmark-text">
<div>WRITE</div><div>FOR US &amp;</div><div>GET PAID!</div>
</div></a>
</div></div></div>

<!--  Event Bannner Space

<div class="container">
<div class="row">
<div class="span12"><a href="http://studytonight.com/event"><img src="http://studytonight.com/css/codetonight-banner.png" alt="Codetonight for Java Programmers" title="Click to Register for Codetonight"/></a></div>
</div></div> -->
<div class="row">

<div class="head-bar-cpp">
	<div class="container">
	<div id="subject-name">
		C++ TUTORIALS
	</div>
	</div>
<div id="subject-info">
<div class="container">
<div id="sm-button">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>

<!-- <a class="addthis_button_compact"></a> -->

</div>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=ra-4fcb15e01d1a671c"></script>
</div>
<!-- AddThis Button END -->

</div>
<div>" C++ is a widely used language even Adobe Photoshop is developed in C++ programming language. "</div>

</div>

</div>
</div>
</div>
<!-- Common sub nav bar for all the lesson page, currently holding Google Adsense Code -->

<div class="center plain-text-ad-style" style="margin-bottom:10px;">
<div class="container">
<div class="row">
<div class="span12">
	<script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Sidebar Responsive Ad -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-6137246359299957"
     data-ad-slot="5741724623"
     data-ad-format="auto"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
</div>	
</div>
</div>

<div class="container">

<div class="row">

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="../../js/jquery.tipsy.js" type="text/javascript"></script>
<script type="text/javascript">
$(function() {
$('.sidebar-social-button').tipsy({gravity: 'e'});
$('#slide-toggle-sidebar').on('click', function(){
        $('#sidebar-menu').css('width','100%');
	$('#sidebar-menu').slideToggle();
	return false;
});
});
</script>
<link href="../../css/tipsy_title.css" rel="stylesheet">

<div class="span3">

<div class="sidebar-collpsed-responsive">
<a href="stl-container-vector#" id="slide-toggle-sidebar"><span class="pull-right"><img src="../../css/resource/collapsed-menu.png" alt="Menu"/></span><span>SEE THE INDEX</span></a>
</div>

<div id="sidebar-menu">
<div class="sidebar-social-button" title="Share this Lesson with your friends">
<!-- AddThis Button BEGIN -->
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
<a class="addthis_counter addthis_pill_style"></a>
</div>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=ra-4fcb15e01d1a671c"></script>
<!-- AddThis Button END -->
</div>
<hr/>
<div><a href="../../cpp.1" class="btn btn-warning btn-lg">&larr; C++ Tutorial</a></div>
<br/>
<ul class="sidebar">
<li class="main"><b>STL Containers</b></li>
<li><a href="stl-introduction">Introduction to STL</a></li> 
<li><a href="stl-overview-of-containers">Overview of Containers in STL</a></li>
<li><a href="stl-pair-template">Pair Template</a></li>
<li><a href="stl-tuple-template">Tuple Template</a></li>
<li><a href="stl-container-array">Array</a></li>
<li><a href="stl-container-vector">Vector</a></li>
<li><a href="stl-container-list">List</a></li>
<li><a href="stl-container-map">Map</a></li>
<li><a href="stl-container-stack">Stack</a></li>
<li><a href="stl-container-queue">Queue</a></li>
<li><a href="stl-container-priority-queue">Priority Queue</a></li> 
<li><a href="stl-container-deque">Deque</a></li>

<li class="main"><b>Iterators</b></li>
<li><a href="stl-iterator-library">Introduction to Iterators</a></li>
<li><a href="stl-operations-on-iterators">Operations on Iterators</a></li>

<li class="main"><b>Algorithms in STL</b></li>
<li><a href="stl-overview-of-algorithms">Overview of Algorithms</a></li>  
<li><a href="stl-sorting-algorithms">Sorting Algorithms</a></li>
<li><a href="stl-searching">Binary Search and Equal Range</a></li>
<li><a href="stl-searching-lower-upper-bound">Upper Bound and Lower Bound</a></li>
<li><a href="stl-non-modifying-algorithms">Non Modifying Algorithms</a></li>
<li><a href="stl-modifying-algorithms">Modifying Algorithms</a></li>
<li><a href="stl-numeric-algorithms">Numeric Algorithms</a></li>
<li><a href="stl-min-max-operations">Minimum and Maximum operations</a></li>
<li><a href="stl-min-max-operations-cont">MinMax and Permutation operations</a></li>

</ul>

<br/>
<p style="margin-left:2px;">
<script id="mNCC" language="javascript">  medianet_width='200';  medianet_height= '200';  medianet_crid='187662268';  </script>  <script id="mNSC" src="http://contextual.media.net/nmedianet.js?cid=8CUK82SPR" language="javascript"></script>
</p>
</div>
</div>
<div class="span9">
<div id="body-content">

<h3>VECTOR</h3>
<p>An <b>array</b> works fine when we have to implement sequential data structures like arrays, except it is static, i.e. we have to define its maximum size during its initialization and it cannot contain elements greater than its maximum size. Now suppose, if during the program execution we have to store elements more than its size, or if we are reading input stream of elements and we do not know the upper bound of the number of elements, there are high chances of occurrence of <b>index_out_bound</b> exception or unwanted termination of the program.</p>
<p>We can do one thing, initialize the array with maximum size allowed by the complier, i.e. <code>10^6</code> elements per array, but that is highly space consuming approach and there is a wastage of space if number of elements to be entered are way too less, thus this approach is never used in programming.</p>
<p>Solution of the above problem is dynamic arrays! They have dynamic size, i.e. their size can change during runtime. Container library provides <b>vectors</b> to replicate dynamic arrays.</p>

<p>SYNTAX for creating a vector is : <code>vector&lt; object_type &gt; vector_name;</code> </p>
<p>For example :</p>
<pre>
#include &lt;vector&gt;
int main()
{
   std::<b>vector</b>&lt;int&gt; my_vector;
}
</pre>
<p>Vector being a dynamic array, doesn&apos;t needs size during declaration, hence the above code will create a blank vector. There are many ways to initialize a vector like,</p>
<pre>
#include &lt;vector&gt;
int main()
{
   std::<b>vector</b>&lt;string&gt; v {"Pankaj" , "The" , "Java" ,"Coder"};
}
</pre>
<p class="center"><img src="../images/vector-declaration.png" alt="Vector declaration and data entry"/></p>
<br>
<p>Note that this type of initialization works only in C++ 11 and above. You can also initialize the vector based on the range of other vectors, like :
</p>
<pre>
#include &lt;vector&gt;
int main()
{
   std::<b>vector</b>&lt;string&gt; v(v1.begin(), v1.end());
}
</pre>
<p>The above code initialize the vector by elements pointed by iterators returned by v1.begin() and v2.end(), begin() and end() are the same function we have studied with array, they work same with vectors.</p>
<p>You can also initialize a vector with one element a certain number of times, like :</p>
<pre>
#include &lt;vector&gt;
int main()
{
   std::<b>vector</b>&lt;string&gt; v(4 , "test");
}
</pre>
<p class="center"><img src="../images/inserting-data-vector.png" alt="same element at all positions in vector"></p>
<p>These are me of the ways using which you can initialize your vector, but remember, initializing your vector using another vector or by using elements directly does not limit its size, its size will always be dynamic, and more elements can be inserted into the vector, whenever required.
</p>
<hr>
<h3>Member Functions of Vector</h3>

<h4>push_back</h4>
<p><code>push_back()</code> is used for inserting an element at the end of the vector. If the type of object passed as parameter in the push_back() is not same as that of the vector or is not interconvertible an exception is thrown.
</p>
<p>The following illustration will show how push_back() works :</p>
<p class="center"><img src="../images/push_back&#32;working.png" alt="push_back working"/></p>
<pre>#include &lt;iostream&gt;
#include &lt;vector&gt;

using namespace std;

int main()
{
  <b>vector</b>&lt;int&gt;  v;
  v.<b>push_back</b>(1);  <i>//insert 1 at the back of v</i>
  v.<b>push_back</b>(2);  <i>//insert 2 at the back of v</i>
  v.<b>push_back</b>(4);  <i>//insert 3 at the back of v</i>

  for(vector&lt;int&gt;::iterator i = v.begin(); i != v.end(); i++) {
  	cout &lt;&lt; *i &lt;&lt;" ";   <i>// for printing the vector</i>
  }
}
<i>/* Output : 1 2 4 */</i></pre>
<br>

<h4>insert</h4>
<p><code>insert(itr, element)</code> method inserts the element in vector before the position pointed by iterator itr.
</p>
<p>The following illustration will show how insert works :</p>
<p class="center"><img src="../images/single-insert-vector.png" alt="insert one element in vector"/></p>
<p><b>insert</b> function can be overloaded by third argument, <b>count</b> as well. This count parameter defines how many times the element is to be inserted before the pointed position.
</p>
<p class="center"><img src="../images/multiple-insert-vector.png" alt="insert single element multiple times in vector"/></p>
<p>This method can also be used to insert elements from any other vector in given range, specified by two iterators, defining starting and ending point of the range.</p>
<pre>v.insert(i, v2.begin(), v2.end());</pre>
<p>Above code will insert the elements from v2.begin() to v2.end() before index pointed by <b>i</b>.</p>
<br>

<h4>pop_back</h4>
<p>pop_back() is used to remove the last element from the vector. It reduces the size of the vector by one.
</p>
<p>Below is an example :</p>
<p class="center"><img src="../images/pop_back-example.png" alt="pop_back example"/></p>
<pre>#include &lt;iostream&gt;
#include &lt;vector&gt;

using namespace std;

int main()
{
  <b>vector</b>&lt;int&gt; v1 {10,20,30,40};
  
  v1.<b>pop_back</b>();  

  vector&lt;int&gt;::iterator it;
  
  for(it = v.begin(); it != v.end(); it++) {
      cout &lt;&lt; *it &lt;&lt;" ";   <i>// for printing the vector</i>
  }
}
<i>/* Output : 10 20 30 */</i></pre>
<br>

<h4>erase</h4>
<p><code>erase(itr_pos)</code> removes the element pointed by the iterator <b>itr_pos</b>. erase method can also be overloaded with an extra iterator specifying the end point of the range to be removed, i.e <code>erase(itr_start, itr_end)</code>.
</p>
<p>The following code will illustrate erase :</p>
<pre>#include &lt;iostream&gt;
#include &lt;vector&gt;

using namespace std;

int main()
{
  vecto&lt;int&gt;v1 {10,20,30,40};
  vector&lt;int&gt;iterator:: it = v.begin();
  
  v.<b>erase</b>(it);   <i>//removes first element from the vector</i>

  v.<b>erase</b>(v1.begin(), v1.end() - 2 )  
  <i>/*removes all the elements except last two */</i>

  for(it = v.begin(); it != v.end(); it++) {
      cout &lt;&lt; *it &lt;&lt;" ";   <i>// for printing the vector</i>
  }
}

<i>/* Output : 30 40 */</i></pre>
<br>

<h4>resize</h4>
<p><code>resize(size_type n, value_type val)</code> method resizes the vector to <b>n</b> elements. If the current size of the vector is greater than <b>n</b> then the trailing elements are removed from the vector and if the current size is smaller than <b>n</b> than extra <b>val</b> elements are inserted at the back of the vector.
</p>
<p>For example, If the size of the vector is 4 right now, with elements {10, 20, 30, 40} and we use <code>resize</code> method to resize it to size 5. Then by default a fifth element with value <b>0</b> will be inserted in the vector. We can specify the data to not be zero, by explicitly mentioning it as the <b>val</b> while calling the resize method.</p>
<br>

<h4>swap</h4>
<p>This method interchanges value of two vectors.</p>
<p>If we have two vectors v1 and v2 and we want to swap the elements inside them, you just need to call <code>v1.swap(v2)</code>, this will swap the values of the two vectors.</p>
<br>

<h4>clear</h4>
<p>This method clears the whole vector, removes all the elements from the vector but do not delete the vector. </p>
<p>SYNTAX : <code>clear()</code></p>
<p>For a vector <b>v</b>, <code>v.clear()</code> will clear it, but not delete it.</p>
<br>

<h4>size</h4>
<p>This method returns the size of the vector.</p>
<br>

<h4>empty</h4>
<p>This method returns true if the vector is empty else returns false.
<br>

<h4>capacity</h4>
<p>This method returns the number of elements that can be inserted in the vector based on the memory allocated to the vector.</p>
<br>

<h4>at</h4>
<p>This method works same in case of vector as it works for array. <code>vector_name.at(i)</code> returns the element at <b>ith</b> index in the vector <b>vector_name</b>.
</p>
<br>

<h4>front and back</h4>
<p><code>vector_name.front()</code> retuns the element at the front of the vector (i.e. leftmost element). While <code>vector_name.back()</code> returns the element at the back of the vector (i.e. rightmost element). </p>

<hr/>
<div><ul class="pager">
<li class="previous">
<a href="stl-container-array">&larr; Prev</a>
</li>
<li class="next">
<a href="stl-container-list">Next &rarr;</a>
</li>
</ul></div>

</div>
</div>

</div>

</div><!-- Container Ends here--> 

<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-39722043-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>

<div id="footer">
<div class="container">
<div id="footer-box">

<div id="footer-box-right">Check Out :  
<a href="../../library"><span class="label">Library</span></a>&nbsp;&nbsp;
<a href="../../online-courses"><span class="label">Video Courses</span></a>&nbsp;&nbsp;
<a href="../../studyroom"><span class="label">Studyroom</span></a>&nbsp;&nbsp;
<a href="../../flashcards"><span class="label">Flashcards</span></a>&nbsp;&nbsp;
</div>

<div id="footer-box-left">

<p>&copy; Studytonight 2014 &middot; <span><img src="../../css/resource/icon-heart-small.png"/>Handcrafted with Love</span></p>

<p><a href="../../about">About Us</a> &middot; <a href="../../suggest">Suggest</a> &middot; <a href="../../terms">Terms</a> &middot; <a href="../../contact">Contact Us</a> &middot; <a href="../../collaborate">Collaborate</a> &middot; <a href="../../authors.1">Authors</a> &middot; <a href="http://studytonight.tumblr.com/">Blog</a></p>


</div>

</div>  <!-- /footer-box -->
<div class="row">
<div class="span12 center">
<script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Responsive Footer Ad -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-6137246359299957"
     data-ad-slot="1965829825"
     data-ad-format="auto"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
</div>
</div> <!-- /container -->
</div>  <!-- /footer -->
</body>
</html>