<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Modifying Algorithms in STL | C++ Tutorial | Studytonight</title>

<meta name="description" content="Learn about modifying algorithms in STL in C++ language in this tutorial.">

<!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
<!--[if lt IE 9]>
<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->

<!-- Le styles -->
<link href="../../css/bootstrap.css" rel="stylesheet">
<link rel="icon" type="image/png" href="../../css/resource/favicon.png">


</head>
<body>

<style>

.dropdown:hover ul{
    display:block;
}
.dropdown ul { 
    display: none;  
    position:absolute;
    background: rgba(0, 0, 0, 0.80); 
    width: 150px;   
    list-style-type:none;
    padding:10px;
} 
.dropdown ul li{
    padding:4px;
}
.dropdown ul li a{ 
    line-height:30px;
    cursor:pointer;
    text-decoration:none;
    color:white;
} 
.dropdown ul li a:hover{
   color:orange;
} 
.dropdown ul.second
{
    left: 300px;
}

</style>

<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_GB/all.js#xfbml=1&appId=183470395085546";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>
<div class="navbar navbar-inverse navbar-fixed-top">
<div class="navbar-inner">
<div class="nav-container">
<a class="brand" href="../../index.html" title="Take me Home :)"><img id="brand-icon" src="../../css/resource/st-icon.png" alt="studytonight logo"/></a>

<!-- <font color="orange">Study</font>tonight<sup><span id="beta">&#946;eta</span></sup> --> 

<ul class="nav navbar-nav nav-left-responsive">
<li><a href="http://studytonight.com/online-courses/">VIDEO PLAYLISTS</a></li>
<li class="dropdown"><a href="http://studytonight.com/library/">TUTORIALS</a>

	<ul class="first">
            <li><a href="../../android-app-using-mit-appinventor">ANDROID</a></li>
            <li><a href="../../maven">APACHE MAVEN</a></li>
            <li><a href="../../c">C LANGUAGE</a></li>
            <li><a href="../../cpp.1">C++</a></li>
            <li><a href="../../computer-networks">COMPUTER NETWORKS</a></li>
            <li><a href="../../java">CORE JAVA</a></li>
      </ul>
      <ul class="second">
      	    <li><a href="../../dbms">DBMS</a></li>
            <li><a href="../../data-structures">DATA STRUCTURE</a></li>
            <li><a href="../../jenkins">JENKINS</a></li>
            <li><a href="../../jsp">JSP</a></li>
            <li><a href="../../operating-system">OPERATING SYSTEM</a></li>
            <li><a href="../../servlet">SERVLET</a></li>
       </ul>

</li>
<li><a href="http://studytonight.com/studyroom/">Q &amp; A FORUM</a></li>
<li><a href="http://studytonight.com/tests/">TESTS</a></li>
<li><a href="http://studytonight.com/code/">HTML COURSE<sup id='beta'>NEW</sup></a></li>
</ul>


<ul class="nav nav-fb-responsive">
<li class="nav-header">
<div class="fb-like" data-href="http://facebook.com/studytonight" data-send="false" data-layout="button_count" data-width="100" data-show-faces="false"></div>
</li>
</ul>


<ul class="nav pull-right-menuoption nav-right-responsive">
<li>
<form class="navbar-search" action="http://www.studytonight.com/search.php" method="GET"> 
<table>
<tr>
<td><input type="text" name="q" maxlength="255" value="" class="search-query span2" placeholder="Search" title="Search Studytonight for Lessons and Topics"/></td>
</tr>
</table>
</form>
</li>
<li><a href="../../login">LogIn</a></li>
<li><a style="font-weight:bold;color:#f84906;" href="../../register">SignUp</a></li>
<li><a href="../../suggest">Suggest</a></li>
</ul>
</div>
</div>
</div>

<div style="float:right;margin-right:100px;">
<div class="bookmark-responsive">
<div class="bookmark-ribbon traditional font-calibri">
<a href="../../collaborate" target="_blank"><div id="bookmark-text">
<div>WRITE</div><div>FOR US &amp;</div><div>GET PAID!</div>
</div></a>
</div></div></div>

<!--  Event Bannner Space

<div class="container">
<div class="row">
<div class="span12"><a href="http://studytonight.com/event"><img src="http://studytonight.com/css/codetonight-banner.png" alt="Codetonight for Java Programmers" title="Click to Register for Codetonight"/></a></div>
</div></div> -->
<div class="row">

<div class="head-bar-cpp">
	<div class="container">
	<div id="subject-name">
		C++ TUTORIALS
	</div>
	</div>
<div id="subject-info">
<div class="container">
<div id="sm-button">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>

<!-- <a class="addthis_button_compact"></a> -->

</div>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=ra-4fcb15e01d1a671c"></script>
</div>
<!-- AddThis Button END -->

</div>
<div>" C++ is a widely used language even Adobe Photoshop is developed in C++ programming language. "</div>

</div>

</div>
</div>
</div>
<!-- Common sub nav bar for all the lesson page, currently holding Google Adsense Code -->

<div class="center plain-text-ad-style" style="margin-bottom:10px;">
<div class="container">
<div class="row">
<div class="span12">
	<script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Sidebar Responsive Ad -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-6137246359299957"
     data-ad-slot="5741724623"
     data-ad-format="auto"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
</div>	
</div>
</div>

<div class="container">

<div class="row">

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="../../js/jquery.tipsy.js" type="text/javascript"></script>
<script type="text/javascript">
$(function() {
$('.sidebar-social-button').tipsy({gravity: 'e'});
$('#slide-toggle-sidebar').on('click', function(){
        $('#sidebar-menu').css('width','100%');
	$('#sidebar-menu').slideToggle();
	return false;
});
});
</script>
<link href="../../css/tipsy_title.css" rel="stylesheet">

<div class="span3">

<div class="sidebar-collpsed-responsive">
<a href="stl-modifying-algorithms#" id="slide-toggle-sidebar"><span class="pull-right"><img src="../../css/resource/collapsed-menu.png" alt="Menu"/></span><span>SEE THE INDEX</span></a>
</div>

<div id="sidebar-menu">
<div class="sidebar-social-button" title="Share this Lesson with your friends">
<!-- AddThis Button BEGIN -->
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
<a class="addthis_counter addthis_pill_style"></a>
</div>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=ra-4fcb15e01d1a671c"></script>
<!-- AddThis Button END -->
</div>
<hr/>
<div><a href="../../cpp.1" class="btn btn-warning btn-lg">&larr; C++ Tutorial</a></div>
<br/>
<ul class="sidebar">
<li class="main"><b>STL Containers</b></li>
<li><a href="stl-introduction">Introduction to STL</a></li> 
<li><a href="stl-overview-of-containers">Overview of Containers in STL</a></li>
<li><a href="stl-pair-template">Pair Template</a></li>
<li><a href="stl-tuple-template">Tuple Template</a></li>
<li><a href="stl-container-array">Array</a></li>
<li><a href="stl-container-vector">Vector</a></li>
<li><a href="stl-container-list">List</a></li>
<li><a href="stl-container-map">Map</a></li>
<li><a href="stl-container-stack">Stack</a></li>
<li><a href="stl-container-queue">Queue</a></li>
<li><a href="stl-container-priority-queue">Priority Queue</a></li> 
<li><a href="stl-container-deque">Deque</a></li>

<li class="main"><b>Iterators</b></li>
<li><a href="stl-iterator-library">Introduction to Iterators</a></li>
<li><a href="stl-operations-on-iterators">Operations on Iterators</a></li>

<li class="main"><b>Algorithms in STL</b></li>
<li><a href="stl-overview-of-algorithms">Overview of Algorithms</a></li>  
<li><a href="stl-sorting-algorithms">Sorting Algorithms</a></li>
<li><a href="stl-searching">Binary Search and Equal Range</a></li>
<li><a href="stl-searching-lower-upper-bound">Upper Bound and Lower Bound</a></li>
<li><a href="stl-non-modifying-algorithms">Non Modifying Algorithms</a></li>
<li><a href="stl-modifying-algorithms">Modifying Algorithms</a></li>
<li><a href="stl-numeric-algorithms">Numeric Algorithms</a></li>
<li><a href="stl-min-max-operations">Minimum and Maximum operations</a></li>
<li><a href="stl-min-max-operations-cont">MinMax and Permutation operations</a></li>

</ul>

<br/>
<p style="margin-left:2px;">
<script id="mNCC" language="javascript">  medianet_width='200';  medianet_height= '200';  medianet_crid='187662268';  </script>  <script id="mNSC" src="http://contextual.media.net/nmedianet.js?cid=8CUK82SPR" language="javascript"></script>
</p>
</div>
</div>
<div class="span9">
<div id="body-content">

<h3>Non Modifying Algorithms in STL</h3>
<p>Following are some Modifying algorithms in Standard Template library that we will be covering :</p>
<ul class="content">
<li>copy and copy_n</li>
<li>fill and fill_n</li>
<li>move</li>
<li>transform</li>
<li>generate</li>
<li>swap</li>
<li>swap_ranges</li>
<li>reverse</li>
<li>reverse_copy</li>
<li>rotate</li>
<li>unique</li>
<li>unique_copy</li>
</ul>
<hr>
<h3>copy and copy_n</h3>
<h4>copy method</h4>
<p>This method copies the elements from the range defined by two iterators <b>first</b> and <b>last</b> into the range starting by the iterator <b>first2</b>.</p>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt;
using namespace std;

int main () 
{
  vector&lt;int&gt; v1,v2;

  v1.push(2);
  v1.push(4); 
  v1.push(6);
  v1.push(8);
  v1.push(10);

  <b>copy</b>(v1.begin(), v1.end(), v2.begin());

  <i>/* v2 is now 2,4,6,8,10 */</i>
}
</pre>
<br>
<h4>copy_n method</h4>
<p>This function copies the first <b>n</b> elements from the position defined by iterators first into the range starting by the iterator <b>first2</b>.
</p>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt;
using namespace std;

int main () 
{
  int values[] = {1,2,3,4,5,6,7,8,9}; 
  vector&lt;int&gt; <b>v1</b>(values, values+9), <b>v2</b>;
  
  <b>copy_n</b>(v1.begin(), 5, v2.begin()); <i>// copies first 5 elements from v1 to v2.</i>
   /* v2 is now 1,2,3,4,5 */ 
}
</pre>
<hr/>
<h3>fill and fill_n</h3>
<h4>fill method</h4>
<p>This method assigns the element a given value in the range defined by two iterators <b>first</b> and <b>last</b>. Syntax for <b>fill()</b> is, <code>fill(iterator first, iterator last, int value)</code>.</p>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt;
using namespace std;

int main () 
{
  vector&lt;int&gt; v1(10); <i>// v1 is now 0,0,0,0,0,0,0,0,0,0</i>

  <b>fill</b>(v.begin(), v.end(), 5);
  
  <i>/* now v1 is 5,5,5,5,5,5,5,5,5,5 */</i>

  <b>fill</b>(v.begin(), v.end() - 5, 3);

  <i>/* now v11 is 3,3,3,3,3,5,5,5,5,5 */</i>
}
</pre>
<br>
<h4>fill_n method</h4>
<p>This method assingns the first <b>n</b> elements a given value from the position defined by iterator <b>first</b>. Syntax for <b>fill_n</b> is <code>fill_n(iterator first, iterator last, int value)</code></p>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt;
using namespace std;

int main () 
{
  int values[] = {1,2,3,4,5,6,7,8,9}; 
  vector&lt;int&gt; v1(values, values+9);
 
  <b>fill_n</b>(v1.begin(), 5 ,10);
  <i>/* v1 is now 10,10,10,10,10,6,7,8,9 */ </i>
}
</pre>
<hr>
<h3>move</h3>
<p>This method moves the elements form the current container and return its <b>rvalue</b> reference. Syntax for <b>move</b> is <code>move(element)</code>.  move() is available in C++ 11 and above.</p>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt;
using namespace std;

int main () 
{
   string a = "nicky";
   string b = "Vicky";
  
   vector&lt;string&gt; <b>name</b>;
  
   // inserts "nicky" in name , a is still = nicky
   name.push_back(a);        
   // inserts "Vicky" in name , b is now NULL
   name.push_back(<b>move</b>(b));  
}
</pre>
<hr/>
<h3>transform</h3>
<p>transform applies a unary/binary operation on a given range and copies the result into the range starting from iterator <b>res</b>. There are two version of transform() which differ by the type of operations performed on the elements.</p>
<ul class="content">
<li><code>transform(iterator first1, iterator last1, iterator res, unaryoperation op)</code> : This method performs unary operation <b>op</b> on the elements in range [first1,last1] and stores the result in range starting from <b>res</b>.</li>
<li><code>transform(iterator first1, iterator last1, iterator first2, iterator res, unaryoperation op)</code> : This method performs binary operation <b>op</b> on the elements in range [first1,last1] with the elements in the range starting with iterator <b>first2</b> and stores the result in range starting from <b>res</b>.</li>
</ul>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt;
using namespace std;

int <b>unaryoperation</b> (int a)
{
   return a*2;
}

int main()
{
   vector&lt;int&gt; v1;
   vector&lt;int&gt; v2;
   vector&lt;int&gt; res1;
   vector&lt;int&gt; res2;
   
   for(int i=0; i < 10; i++)
     {
        v2.push_back(i);
        v1.push_back(i*10); 
     }
   
   <i>/*   v2 :  1,2,3,4,5,6,7,8,9  */ </i>
   <i>/*   v1 :  10,20,30,40,50,60,70,80,90  */</i>

   res2.resize(10);
     
   transform(v2.begin(), v2.end(), res1.begin(), unaryoperation);
   <i>/* now res1 is : 2,4,6,8,10,12,14,16,18 */</i>
}
</pre>
<hr>
<h3>generate and generate_n</h3>

<h4>generate method</h4>
<p>This method assigns all the elements in the given range to the value returned by the successive call to function generate_element. Syntax for <b>generate</b> is <code>generate(iterator first, iterator last, generator_function generate_element)</code>.</p>
<br>
<h4>generate_n method</h4>
<p>This method assigns first <b>n</b> elements in the given range to the value returned by the successive call to function generate_element. Syntax for <b>generate</b> is <code>generate(iterator first, int n, generator_function generate_element)</code>.</p>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt;
#include &lt;time.h&gt;
#include &lt;cstdlib&gt;

using namespace std;

int <b>generate_random</b>()
{
 return rand()%10;
}


int main()
{
   <b>srand</b>(time(NULL));

   vector&lt;int&gt; v1 , v2;
   v1.resize(10);
   v2.resize(10);
   
   <b>generate</b>(v1.begin(), v1.end(), generate_random) ;

   <i>/* this assign each element a random value generated 
   by the generate_random() */</i>

   <b>generate_n</b>(v2.begin(), 5, generate_random);

   <i>/* this assign first 5 elements a random value 
   and rest of the elements are un changed */ </i>
}
</pre>
<hr>
<h3>swap Method</h3>
<p>This method swaps the elements of two container of same type.</p>
<pre>
#include &lt;iostream&gt;     
#include &lt;utility&gt;
#include &lt;vector&gt;

using namespace std;

int main ()
{
  int a = 6;
  int b = 9;

  <b>swap</b>(a,b);
  <i>/* a = 9 , b=6 */ </i>

  <i>/* you can also swap an entire container with swap */</i>

   vector&lt;int&gt; <b>v</b>, <b>c</b>;
   for(int j=0; j < 10; j++)
   {
       v.push_back(j);
       c.push_back(j+1);
   }

   <b>swap</b>(v,c);

   for(vector&gt;int&gt;::iterator i = <b>v</b>.begin() ; i! = <b>v</b>.end() ; i++)
   cout&lt;&lt;*i&lt;&lt;" ";

   cout&lt;&lt;endl;

   for(vector&lt;int&gt;::iterator k = <b>c</b>.begin() ; k! = <b>c</b>.end() ; k++)
   cout&lt;&lt; *k &lt;&lt;" ";
}
</pre>
<hr>
<h3>swap_ranges</h3>
<p><code>swap_ranges(iterator first1, iterato last1, iterato first2)</code> : It swaps the elements in the range [first1, last1]  with the elements present in the range starting from <b>first2</b>.</p>
<pre>
#include &lt;iostream&gt;     
#include &lt;utility&gt;
#include &lt;vector&gt;

int main ()
{
   vector&lt;int&gt; v, c;
   for(int j=0; j < 10; j++)
   {
       v.push_back(j);
       c.push_back(j+1);
   }

   <b>swap_ranges</b>(v.begin(), v.begin()+5, c.begin());

   <i>/* swaps the first five element of 
   vector v by the elements of vector c */</i>

   for(vector&lt;int&gt;::iterator i = v.begin() ; i!= v.end() ; i++)
   cout&lt;&lt; *i &lt;" ";

   cout&lt;&lt;endl;

   for(vector&lt;int&gt;::iterator k = c.begin() ; k!= c.end() ; k++)
   cout&lt;&lt;*k&lt;&lt;" ";
}
</pre>
<hr>
<h3>reverse</h3>
<p><code>reverse(iterator first, iterator last)</code> is used to reverse the order of the elements in the range [first, last].</p>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt;

using namespace std;

int main () 
{
   int a[] = {1,5,4,9,8,6,1,3,5,4};
   
   <b>reverse</b>(a, a+10);

   <i>/* reverse all the elements of the array a*/ 
   /* now a is : 4,5,3,1,6,8,9,4,5,1 */</i>
  
   <b>reverse</b>(a, a+5);
  
   <i>/* reverse first 5 elements of the array a */
   /* now a is : 6,1,3,5,4,8,9,4 */ </i>

   vector&lt;int&gt; v(a, a+10);
  
   <b>reverse</b>(v.begin(), v.end());
  
   <i>/* reverse the elements of the vector v */
   /* vector is now 4,9,8,4,5,3,1,6 */</i>
}
</pre>
<hr>
<h3>reverse_copy</h3>
<p>This method copies the elements in the given range in the reverse order. It does not change the order of the original container. Syntax for <b>reverse_copy</b> is <code>reverse_copy(iterator first ,iterator last ,iterator res)</code>, copies the elements in the range [first, last] in the reverse order to the range starting by iterator <b>res</b>.</p>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt;

using namespace std; 

int main()
{
   int values[] = {1,4,8,9,5,6,2,7,4,1};
   
   vector&lt;int&gt; v1(values, values+10);
   <i>/* v1 is now 1,4,8,9,5,6,2,7,4,1  */</i>
  
   vector&lt;int&gt; v2;
  
   v2.resize(v1.size());   <i>// allocate size for v2</i>

   <b>reverse_copy</b>(v1.begin(), v1.end(), v2.begin());
   <i>/* copies elements of v1 in reverse order in v2 */ </i>

   <i>/* now v2 is : 1,4,7,2,6,5,9,8,4,1  */</i>
}
</pre>
<hr>
<h3>rotate</h3>
<p>This method is used to <code>rotate(iterator first, iterator middle, iterator last)</code> the elements present in the given range [first,last] such that the element pointed by the <b>middle</b> iterator becomes first element.
</p>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt; 

using namespace std;

int main () 
{
  int a[] = {1,5,9,8,4,6,9,2};
  vector&lt;int&gt; v(a,a+8);
   
  <b>rotate</b>(a,a+4,a+8);
  <i>/* rotate a such that a[4] is now the first element of array a */
  /* now a is : 4,6,9,2,1,5,9,8 */</i>
 
  <b>rotate</b>(v.begin(), v.begin()+5, v.end());
  <i>/* now vector v is :6,9,2,1,5,9,8,4  */</i>
} 
</pre>
<hr/>
<h3>unique</h3>
<p>This method removes the consecutive duplicate elements from the given range. It have two variations. It returns an iterator to the position which is next to the last element of the new range. <code>resize()</code> can be used for adjusting the size of the container after unique().</p>
<ul class="content">
<li><code>unique(iterator first, iterator last)</code> : It removes all the consecutive duplicate elements except the first one in the range [first,last]. Operator <code>==</code>, is used to check if the elemets are duplicate or not.</li>
<li><code>unique(iterator first, iterator last, bool compare_function)</code> : In this version, we use <b>compare_function</b> to check if the elememts are duplicate of not.</li>
</ul>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt;
#include &lt;utility&gt;

using namespace std;

bool <b>cmp_function</b>(int a , int b )
{
  return a+b;
}

int main ()
{
  int values[] = {10,5,5,5,9,6,6,4,4};
  vector&lt;int&gt; v (values,values+9) , v4;

  vector&lt;int&gt;::iterator it;

  it = <b>unique</b>(v.begin(), v.end());
  <i>/* vector v is now : 10,5,9,6,4,-,-,-,-  */</i>

  <i>/* - indicates that the elements are removed from the vector 
  and next elements are shifted to their position */

  /* now it is pointing to the first occurrence of the “-“ in 
  the vector , i.e the position next to the last element (4) */

  /* adjusting the size of vector v */</i>

  v.resize(distance(v.begin(),it));
  <i>/* resize the vector by the size returned by distance function, 
  which returns the distance between the two iterators  */

  /* vector v is now 10,5,9,6,4  */

  /* using compare_function */</i>

  vector&lt;int&gt; v3(values, values+9);

  it = <b>unique</b>(v3.begin(), v3.end(), cmp_function);
  v3.resize(distance(v3.begin(), it));

  <i>/* removes copies the duplicate  elements from v3*/</i>

  return 0;
}
</pre>
<hr/>
<h3>unique_copy</h3>
<p>This method copies the unique elements from the range [first,last] and returns the iterator to the position next to the last element in the new range. It have two variations. It returns an iterator to the position which is next to the last element of the new range. <code>resize()</code> can be used for adjusting the size of the container after unique().</p>
<ul class="content">
<li><code>unique_copy(iterator first, iterator last)</code> : It removes all the consecutive duplicate elements except the first one in the range [first,last]. Operator <code>==</code>, is used to check if the elemets are duplicate or not.</li>
<li><code>unique_copy(iterator first, iterator last, bool compare_function)</code> : In this version, we use compare_function to check if the elememts are duplicate of not.</li>
</ul>
<pre>
#include &lt;iostream&gt;     
#include &lt;algorithm&gt;
#include &lt;vector&gt;

using namespace std;

bool <b>cmp_fuction</b>(int a , int b )
{
  return a+b;
}

int main ()
{
  int values[] = {10,5,5,5,9,6,6,4,4};
  vector&lt;int&gt; v (values,values+9);
  vector&lt;int&gt; v2;
  v2.resize(v.size());

  vector&lt;int&gt;::iterator it;

  it = <b>unique</b>(v.begin(), v.end());
  <i>/* vector v2 is now : 10,5,9,6,4,-,-,-,-  */

  /* - indicates that the elements are removed from the vector 
  and next elements are shifted to their position */

  /* now it is pointing to the first occurrence of the “-“ 
  in the vector, i.e the position next to the last element (4) */

  /* adjusting the size of vector v */</i>

  v.<b>resize</b>(distance(v.begin(), it));
  <i>/* resize the vector by the size returned by distance function, 
  which returns the distance between the two iterators  */

  /* vector v is now 10,5,9,6,4  */

  /* using compare_function */</i>

  vector&lt;int&gt; v3(values,values+9),v4;
  v4.resize(v3.size());

  it = <b>unique_copy</b>(v3.begin(), v3.end(), v4.begin(), cmp_fuction);
  v4.resize(distance(v4.begin(), it));

  <i>/* copies the unique elements from v3 to v4 */</i>

  return 0;
}
</pre>
<hr/>
<div><ul class="pager">
<li class="previous">
<a href="stl-non-modifying-algorithms">&larr; Prev</a>
</li>
<li class="next">
<a href="stl-numeric-algorithms">Next &rarr;</a>
</li>
</ul></div>

</div>
</div>

</div>

</div><!-- Container Ends here--> 

<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-39722043-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>

<div id="footer">
<div class="container">
<div id="footer-box">

<div id="footer-box-right">Check Out :  
<a href="../../library"><span class="label">Library</span></a>&nbsp;&nbsp;
<a href="../../online-courses"><span class="label">Video Courses</span></a>&nbsp;&nbsp;
<a href="../../studyroom"><span class="label">Studyroom</span></a>&nbsp;&nbsp;
<a href="../../flashcards"><span class="label">Flashcards</span></a>&nbsp;&nbsp;
</div>

<div id="footer-box-left">

<p>&copy; Studytonight 2014 &middot; <span><img src="../../css/resource/icon-heart-small.png"/>Handcrafted with Love</span></p>

<p><a href="../../about">About Us</a> &middot; <a href="../../suggest">Suggest</a> &middot; <a href="../../terms">Terms</a> &middot; <a href="../../contact">Contact Us</a> &middot; <a href="../../collaborate">Collaborate</a> &middot; <a href="../../authors.1">Authors</a> &middot; <a href="http://studytonight.tumblr.com/">Blog</a></p>


</div>

</div>  <!-- /footer-box -->
<div class="row">
<div class="span12 center">
<script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Responsive Footer Ad -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-6137246359299957"
     data-ad-slot="1965829825"
     data-ad-format="auto"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
</div>
</div> <!-- /container -->
</div>  <!-- /footer -->
</body>
</html>